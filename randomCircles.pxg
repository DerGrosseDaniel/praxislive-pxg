#%praxis.version 4.1.0
@ ./randomCircles video:custom {
  #%graph.x 0
  #%graph.y 0
  #%graph.minimized true
  .code "

    @P(1) @Type.Integer(min = 1, def = 3) int numberCircles;
    @P(2) @Type.Number(min = 0, max = 100, def =10) double minSize;
    @P(3) @Type.Number(min = 0, max = 100, def =40) double maxSize;
    @P(4) @Type.Boolean(def = false) boolean overlapAllowed;
    
    @T(1) void generate()\{
        circles.clear();
        int generateCount = 0;
        for(int i = 0; i< numberCircles;i++)\{
            generateCount++;
            int\[\] temp = \{round(random(width)),round(random(height)),round(random(width*minSize/100.0,width*maxSize/100.0))\};
            circles.add(temp);
            if(!overlapAllowed)\{ //check for oevrlap
                for(int j = 0; j < circles.size()-1;j++)\{
                    if(dist(circles.get(j)\[0\],circles.get(j)\[1\],circles.get(i)\[0\],circles.get(i)\[1\]) < circles.get(j)\[2\] + circles.get(i)\[2\])\{
                        j = circles.size();
                        circles.remove(i);
                        i--;
                    \}
                \}
            \}
            if(generateCount > 10000)\{
                i = numberCircles;
            \}
        \}
    \};
    @T(2) void clearCircles()\{
        circles.clear();
    \};
    
    ArrayList<int\[\]> circles;
    
    @Override
    public void setup() \{
        circles = new ArrayList<int\[\]>();
        generate();
    \}
    
    void drawCircles()\{
        background(0);
        noStroke();
        smooth();
        fill(255);
        for(int i = 0; i < circles.size(); i++)\{
            ellipse(circles.get(i)\[0\], circles.get(i)\[1\], circles.get(i)\[2\], circles.get(i)\[2\]);
        \}
    \}
    
    @Override
    public void draw() \{
        drawCircles();
        
    \}
    
    
    
"
  .min-size 25.925925925925924
  .max-size 100.0
}
